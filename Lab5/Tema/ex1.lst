     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 010306020302                s1 db 1, 3, 6, 2, 3, 2
    14                                      len equ $-s1 ;lenght of s1,s2 (6)
    15 00000006 060308010205                s2 db 6, 3, 8, 1, 2, 5
    16 0000000C 00<rept>                    d times len db 0 ;reserve space for the result and initialize it by 0
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; Two byte strings S1 and S2 of the same length are given. Obtain the string D where each element is the sum of the corresponding elements from S1 and S2
    22                                          ; S1: 1, 3, 6, 2, 3, 2
    23                                          ; S2: 6, 3, 8, 1, 2, 5
    24                                          ; D: 7, 6, 14, 3, 5, 7
    25 00000000 B906000000                      mov ecx, len
    26 00000005 BE00000000                      mov esi, 0
    27 0000000A E317                            jecxz End
    28                                          Sum:
    29 0000000C 8A86[00000000]                      mov al, [s1+esi] ;get the esi'th element from the first string
    30 00000012 8A9E[06000000]                      mov bl, [s2+esi] ;get the esi'th element from the second string
    31 00000018 00D8                                add al, bl ;calculate the sum of elements
    32 0000001A 8886[0C000000]                      mov [d+esi], al ;save the result in d string
    33 00000020 46                                  inc esi ;incrementing esi
    34 00000021 E2E9                            loop Sum
    35                                          End:
    36                                          ; exit(0)
    37 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
