     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 04                          a DB 4
    14 00000001 0A                          b DB 10
    15 00000002 0F                          c DB 15
    16 00000003 20                          d DB 32
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 66A1[00000000]                  mov ax, [a]
    22 00000006 660305[01000000]                add ax, [b]
    23 0000000D 66A1[01000000]                  mov ax, [b]
    24 00000013 662B05[00000000]                sub ax, [a]
    25 0000001A 66A1[02000000]                  mov ax, [c]
    26 00000020 668B0D[03000000]                mov cx, [d]
    27 00000027 66F7E1                          mul cx ;ax = ax * cx
    28 0000002A 66A1[03000000]                  mov ax, [d]
    29 00000030 668B0D[02000000]                mov cx, [c]
    30 00000037 66F7F1                          div cx ;ax = ax / cx
    31                                          
    32                                          ; exit(0)
    33 0000003A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 0000003C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
