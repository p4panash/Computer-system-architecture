     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 02                          a db 2
    14 00000001 01                          b db 1
    15 00000002 03                          c db 3
    16 00000003 0400                        d dw 4
    17                                      
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;[(a-b)*5+d]-2*c = 3
    23                                          ;AX=(a-b)*5
    24 00000000 A0[00000000]                    mov AL, [a]
    25 00000005 2A05[01000000]                  sub AL, [b]
    26 0000000B B105                            mov CL, 5
    27 0000000D F6E1                            mul CL
    28                                          
    29                                          ;BX=AX+d
    30 0000000F 6689C3                          mov BX, AX
    31 00000012 66031D[03000000]                add BX, [d]
    32                                          
    33                                          ;AX=c*2
    34 00000019 A0[02000000]                    mov AL, [c]
    35 0000001E B102                            mov CL, 2
    36 00000020 F6E1                            mul CL
    37                                          
    38                                          ;DX = AX
    39                                          ;AX = BX
    40 00000022 6689C2                          mov DX, AX
    41 00000025 6689D8                          mov AX, BX
    42 00000028 6629D0                          sub AX, DX
    43                                          
    44                                      
    45                                          ; exit(0)
    46 0000002B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    47 0000002D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
